require-module plug

# Let plug.kak manage itself.
plug plug https://github.com/alexherbo2/plug.kak %{
    # Upgrade plugins
    # Install plugins and build them.
    define-command plug-upgrade -docstring 'plug-upgrade' %{
        plug-install
        plug-execute connect make install
        plug-execute lsp cargo build --release
    }
}

plug-core %{
    # Tools
    set-option global makecmd 'make -j 8'
    set-option global grepcmd 'rg --column --with-filename'
}

plug-old pandoc git/pandoc.kak %{
    set-option global pandoc_options "-d default"
}

plug-old lsp https://github.com/kak-lsp/kak-lsp %{
    set global lsp_cmd "kak-lsp -s %val{session} --config ~/.config/kak-lsp/kak-lsp.toml"

    # uncomment to enable debugging
    # set global lsp_cmd "kak-lsp -s %val{session} --config ~/.config/kak-lsp/kak-lsp.toml -vvv --log /tmp/kak-lsp.log"
    # eval %sh{echo ${kak_opt_lsp_cmd} >> /tmp/kak-lsp.log}

    # this is not necessary; the `lsp-enable-window` will take care of it
    # eval %sh{${kak_opt_lsp_cmd} --kakoune -s $kak_session}

    set global lsp_diagnostic_line_error_sign '║'
    set global lsp_diagnostic_line_warning_sign '┊'

    define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
    define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
    define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }

    map global normal <#> ': enter-user-mode lsp<ret>' -docstring 'lsp'

    # Snippets
    # def -hidden insert-c-n %{
    #      try %{
    #             lsp-snippets-select-next-placeholders
    #                exec '<a-;>d'
    #      } catch %{
    #             exec -with-hooks '<c-n>'
    #      }
    # }
    # map global insert <c-n> "<a-;>: insert-c-n<ret>"

    define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
    hook global WinSetOption filetype=(c|cpp|cc|rust|python|java|latexi|markdown) %{
        set-option window lsp_auto_highlight_references true
        set-option window lsp_hover_anchor false
        lsp-auto-hover-enable
        echo -debug "Enabling LSP for filtetype %opt{filetype}"
        lsp-enable-window
    }

    hook global WinSetOption filetype=python %{
        set-option global lsp_server_configuration pyls.configurationSources=["flake8"]
    }

    hook global WinSetOption filetype=(rust) %{
        set window lsp_server_configuration rust.clippy_preference="on"
    }

    hook global WinSetOption filetype=rust %{
        hook window BufWritePre .* %{
            evaluate-commands %sh{
                test -f rustfmt.toml && printf lsp-formatting-sync
            }
        }
    }

    hook global KakEnd .* lsp-exit
}

plug-old kakoune-buffers https://github.com/delapouite/kakoune-buffers %{
    # Suggested hook

    hook global WinDisplay .* info-buffers

    # Suggested mappings

    map global user b ': enter-buffers-mode<ret>'              -docstring 'buffers…'
    map global user B ': enter-user-mode -lock buffers<ret>'   -docstring 'buffers (lock)…'
    map global user <a-b> ': pick-buffers<ret>' -docstring 'pick buffer…'

    # Suggested aliases

    alias global bd delete-buffer
    alias global bf buffer-first
    alias global bl buffer-last
    alias global bo buffer-only
    alias global bo! buffer-only-force
}

plug powerline https://github.com/jdugan6240/powerline.kak %{
    # set-option global powerline_format 'git bufname filetype mode_info line_column position'
    # powerline-toggle line_column off
    # source .config/kak/autoload/plugins/powerline/rc/themes/gruvbox.kak
    powerline-theme gruvbox
    powerline-separator triangle
    powerline-start
}

# plug kakoune-smooth-scroll https;//github.com/caksoylar/kakoune-smooth-scroll {
#     hook global WinCreate .* %{ hook -once window WinDisplay [^*].* smooth-scroll-enable }
# }

plug prelude https://github.com/alexherbo2/prelude.kak

plug connect https://github.com/alexherbo2/connect.kak %{
    # Modules
    require-module connect-fzf
    require-module connect-nnn
    require-module connect-broot

    hook global ModuleLoaded kitty %{
          alias global popup kitty-terminal-tab # or kitty-terminal
    }

    # compatibility
    # alias global repl-new kitty-repl

    # Create a new window

    # set-option global connect_environment %{
    #     export SHELL="/usr/local/bin/fish --init-command=\"set -x EDITOR :edit; set -x VISUAL :edit\""
    # }
}
map global normal <c-t> ': connect-terminal<ret>'

plug explore https://github.com/alexherbo2/explore.kak %{
    explore-enable

    alias global explore-files fzf-files
    alias global explore-buffers fzf-buffers
}

plug fzf https://github.com/andreyorst/fzf.kak 
map global normal <c-p> ': fzf-mode<ret>'


plug yank-ring https://github.com/alexherbo2/yank-ring.kak %{
    require-module yank-ring-connect

    yank-ring-enable

    map global normal Y ': yank-ring<ret>'
}

plug-old kakoune-sudo-write https://github.com/occivink/kakoune-sudo-write

plug-old number-toggle https://github.com/evanrelf/number-toggle.kak %{
    set-option global number_toggle_params -hlcursor
}

plug surround https://github.com/alexherbo2/surround.kak %{
    ## Quoting
    map -docstring 'Surround' global normal q ': enter-user-mode surround<ret>'
    map -docstring 'Surround insert' global normal Q ': surround-enter-insert-mode<ret>'
    map -docstring 'Surround (Replace)' global normal <a-q> ': surround-delete; enter-user-mode surround<ret>'

    ## Move macros to ^
    map -docstring 'Play macro' global normal ^ q
    map -docstring 'Record macro' global normal <a-^> Q
}

plug auto-pairs https://github.com/alexherbo2/auto-pairs.kak %{
    hook global WinCreate .* %{ auto-pairs-enable }
}

plug-old kakoune-show-matching-insert https://github.com/laelath/kakoune-show-matching-insert %{
    add-highlighter global/ ranges show_matching_insert
}

plug search-doc https://github.com/jbomanson/search-doc.kak %{
    alias global sd search-doc
}

plug smarttab https://github.com/andreyorst/smarttab.kak %{
    # when `backspace' is pressed, 4 spaces are deleted at once
    set-option global softtabstop 4

    # these languages will use `expandtab' behavior
    hook global WinSetOption filetype=.* expandtab
    # these languages will use `noexpandtab' behavior
    hook global WinSetOption filetype=(makefile|gas) noexpandtab
    # these languages will use `smarttab' behavior
    hook global WinSetOption filetype=(c|cpp) smarttab
}

plug palette https://github.com/alexherbo2/palette.kak

# Key Mappings

## Quit
map global normal <c-q> ': quit<ret>'

## quick safe
map global user w -docstring 'safe file' ': w<ret>'

## edit kakrc
map global user <,> -docstring 'edit kakrc' ': edit "%val{config}/kakrc"<ret>'
map global user <a-,> -docstring 'source kakrc' ': source "%val{config}/kakrc"<ret>'

## source current buffer
map global user <a-<> -docstring 'source current buffer' ': source "%val{buffile}<ret>'

## jj to escape
hook global InsertChar j %{ try %{
  exec -draft hH <a-k>jj<ret> d
  exec <esc>
}}

## alias for enter-user-mode
alias global u enter-user-mode

## commenting

map global user c -docstring '(un-)comment line' ': comment-line<ret>'
map global user C -docstring '(un-)comment block' ': comment-block<ret>'

## Mac Clipboard
hook global NormalKey y|d|c %{ nop %sh{
      printf %s "$kak_main_reg_dquote" | pbcopy
}}
map global user P -docstring 'Paste above' '!pbpaste<ret>'
map global user p -docstring 'Paste below' '<a-!>pbpaste<ret>'
map global user R -docstring 'Replace' '|pbpaste<ret>'


# IDE
# (needs connect.kak)

define-command ide -params 0..1 -docstring 'ide [session-name]: Turn Kakoune into an IDE' %{
  # Session name
  try %{
    rename-session %arg{1}
  }

  # Main client
  rename-client main
  set-option global jumpclient main

  # Tools client
  new %{
    rename-client tools
    set-option global toolsclient tools
  }

  # Docs client
  new %{
    rename-client docs
    set-option global docsclient docs
  }

  # Project drawer
  broot

  # Git
  > lazygit

  # Terminal
  >

  # get focus back
  focus main
}

# general Configuration

    ##verbose autoinfo
set-option -add global autoinfo normal

## case insensitive search by default
map global normal / "/(?i)"

# Appearance

colorscheme gruvbox

add-highlighter global/ number-lines -relative -hlcursor
add-highlighter global/ show-whitespaces

add-highlighter global/ line '%val{cursor_line}' default,rgb:3c3735
add-highlighter global/ column 81 default,red
add-highlighter global/ wrap -indent -word -marker ' … '
